<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:javaee="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" id="WebApp_ID" version="2.4">
  <display-name>OldCare</display-name>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
			/WEB-INF/config/application-context.xml
			<!-- /WEB-INF/config/cache-context.xml -->
			/WEB-INF/config/captcha-context.xml
			/WEB-INF/config/jeecore-context.xml
			/WEB-INF/config/jeecms-context.xml
		</param-value>
  </context-param>
  <!-- 使用指定类初始化日志对象,在日志输出的时候，可以打印出日志信息所在类 -->
  <filter>
    <filter-name>processTime</filter-name>
    <filter-class>com.dgut.common.web.ProcessTimeFilter</filter-class>
  </filter>
  <filter>
    <filter-name>encoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  
  <!--OpenSessionInViewFilter是Spring提供的一个针对Hibernate的一个支持类，
       其主要意思是在发起一个页面请求时打开Hibernate的Session，一直保持这个Session，直到这个请求结束，具体是通过一个Filter来实现的。 　
            由于Hibernate引入了Lazy Load特性，使得脱离Hibernate的Session周期的对象如果再想通过getter方法取到其关联对象的值，Hibernate会抛出一个LazyLoad的Exception。所以为了解决这个问题，
       Spring引入了这个Filter，使得Hibernate的Session的生命周期变长  -->
  <filter>
    <filter-name>osivFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>processTime</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>osivFilter</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>processTime</filter-name>
    <url-pattern>*.jspx</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>*.jspx</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>osivFilter</filter-name>
    <url-pattern>*.jspx</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>processTime</filter-name>
    <url-pattern>*.jhtml</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>*.jhtml</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>osivFilter</filter-name>
    <url-pattern>*.jhtml</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>processTime</filter-name>
    <url-pattern>*.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>*.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>osivFilter</filter-name>
    <url-pattern>*.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>processTime</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>osivFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
   <!-- 配置springmvc文件 -->
  <servlet>
    <servlet-name>MBAdmin</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/config/jeecms-servlet-admin.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
 
  <servlet>
    <servlet-name>MBFront</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/config/jeecms-servlet-front.xml</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <!--  配置生成验证码的service-->
  <servlet>
    <servlet-name>Jcaptcha</servlet-name>
    <servlet-class>com.dgut.common.captcha.JcaptchaServlet</servlet-class>
  </servlet>
  <!-- 配置验证码请求路径 -->
  <servlet-mapping>
    <servlet-name>Jcaptcha</servlet-name>
    <url-pattern>/captcha.svl</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>MBAdmin</servlet-name>
    <url-pattern>/admin/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>MBFront</servlet-name>
    <url-pattern>/app/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>MBFront</servlet-name>
    <url-pattern>/MyApp/*</url-pattern>
  </servlet-mapping>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 防止内存泄露 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <session-config>
    <session-timeout>20</session-timeout>
  </session-config>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.shtml</welcome-file>
    <welcome-file>index.jhtml</welcome-file>
  </welcome-file-list>
  <error-page>
    <error-code>403</error-code>
    <location>/WEB-INF/error/403.html</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/404.html</location>
  </error-page>
  <!--我们用浏览器打开文件的时候会发现如果是doc文件， 会用记事本打开，出现乱码， 但是如果在web.xml里面配置了类型，浏览器就会根据配置的类型自动调用相应的程序打开-->
  <mime-mapping>
    <extension>rar</extension>
    <mime-type>application/zip</mime-type>
  </mime-mapping>
  <mime-mapping>
    <extension>doc</extension>
    <mime-type>application/zip</mime-type>
  </mime-mapping>
  <mime-mapping>
    <extension>wps</extension>
    <mime-type>application/zip</mime-type>
  </mime-mapping>
  <mime-mapping>
    <extension>et</extension>
    <mime-type>application/zip</mime-type>
  </mime-mapping>
</web-app>